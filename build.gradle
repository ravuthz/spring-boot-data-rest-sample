plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'

    id 'base'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
    id 'com.palantir.docker-compose' version '0.25.0'
    id 'pl.allegro.tech.build.axion-release' version '1.12.0'
}

group = 'com.hti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

project.version = scmVersion.version

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-data-rest:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    implementation "io.springfox:springfox-bean-validators:3.0.0"

    implementation 'commons-httpclient:commons-httpclient:3.1'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

docker {
    name "${project.name}:${project.version}"
    dockerfile file('./jenkins/Dockerfile')
    files "jenkins/plugins.txt", "jenkins/seedJob.xml", "jenkins/credentials.xml"
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports "9999:8080"
    clean true
    daemonize false
}

dockerCompose {
    dockerComposeFile './jenkins/docker-compose.yml'
}